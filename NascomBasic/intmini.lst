0001   0000             ;==================================================================================
0002   0000             ; Contents of this file are copyright Grant Searle
0003   0000             ;
0004   0000             ; You have permission to use this for NON COMMERCIAL USE ONLY
0005   0000             ; If you wish to use it elsewhere, please include an acknowledgement to myself.
0006   0000             ;
0007   0000             ; http://searle.hostei.com/grant/index.html
0008   0000             ;
0009   0000             ; eMail: home.micros01@btinternet.com
0010   0000             ;
0011   0000             ; If the above don't work, please perform an Internet search to see if I have
0012   0000             ; updated the web page hosting service.
0013   0000             ;
0014   0000             ;==================================================================================
0015   0000             
0016   0000             ; Minimum 6850 ACIA interrupt driven serial I/O to run modified NASCOM Basic 4.7
0017   0000             ; Full input buffering with incoming data hardware handshaking
0018   0000             ; Handshake shows full before the buffer is totally filled to allow run-on from the sender
0019   0000             
0020   0000             SER_BUFSIZE     .EQU    3FH
0021   0000             SER_FULLSIZE    .EQU    30H
0022   0000             SER_EMPTYSIZE   .EQU    5
0023   0000             
0024   0000             serBuf          .EQU    02000H
0025   0000             serInPtr        .EQU    serBuf+SER_BUFSIZE
0026   0000             serRdPtr        .EQU    serInPtr+2
0027   0000             serBufUsed      .EQU    serRdPtr+2
0028   0000             basicStarted    .EQU    serBufUsed+1
0029   0000             TEMPSTACK       .EQU    020EDH ; Top of BASIC line input buffer so is "free ram" when BASIC resets
0030   0000             
0031   0000             CR              .EQU    0DH
0032   0000             LF              .EQU    0AH
0033   0000             CS              .EQU    0CH             ; Clear screen
0034   0000             
0035   0000                             .ORG    0000
0036   0000             ;------------------------------------------------------------------------------
0037   0000             ; Reset
0038   0000             
0039   0000 F3          RST00           DI                       ;Disable interrupts
0040   0001 C3 A2 00                    JP      INIT            ;Initialize Hardware and go
0041   0004             
0042   0004 00 00 00 00                 .FILL   0008H-$,0 ; Padding so RST8 starts at org 0x0008H
0043   0008             
0044   0008             ;------------------------------------------------------------------------------
0045   0008             ; TX a character over RS232
0046   0008             
0047   0008                             .ORG    0008H
0048   0008 C3 91 00    RST08           JP      TXA
0049   000B             
0050   000B 00 00 00 00                 .FILL   0010H-$,0 ; Padding so RST10 starts at org 0x0010H
0050   000F 00 
0051   0010             
0052   0010             ;------------------------------------------------------------------------------
0053   0010             ; RX a character over RS232 Channel A [Console], hold here until char ready.
0054   0010             
0055   0010                             .ORG    0010H
0056   0010 C3 6A 00    RST10           JP      RXA
0057   0013             
0058   0013 00 00 00 00                 .FILL   0018H-$,0
0058   0017 00 
0059   0018             
0060   0018             ;------------------------------------------------------------------------------
0061   0018             ; Check serial status
0062   0018             
0063   0018                             .ORG    0018H
0064   0018 C3 94 00    RST18           JP      CKINCHAR
0065   001B             
0066   001B 00 00 00 00                 .FILL   0038H-$,0
0066   001F 00 00 00 00 
0066   0023 00 00 00 00 
0066   0027 00 00 00 00 
0066   002B 00 00 00 00 
0066   002F 00 00 00 00 
0066   0033 00 00 00 00 
0066   0037 00 
0067   0038             
0068   0038             ;------------------------------------------------------------------------------
0069   0038             ; RST 38 - INTERRUPT VECTOR [ for IM 1 ]
0070   0038             
0071   0038                             .ORG    0038H
0072   0038 18 00       RST38           JR      serialInt
0073   003A             
0074   003A             ;------------------------------------------------------------------------------
0075   003A F5          serialInt:      PUSH    AF
0076   003B E5                          PUSH    HL
0077   003C DB 00                       IN      A,(00h)   ;RECEIVE CHAR
0078   003E             
0079   003E F5                          PUSH    AF
0080   003F 3A 43 20                    LD      A,(serBufUsed)
0081   0042 FE 3F                       CP      SER_BUFSIZE     ; If full then ignore
0082   0044 20 03                       JR      NZ,notFull
0083   0046 F1                          POP     AF
0084   0047 18 1C                       JR      rts0
0085   0049             
0086   0049 2A 3F 20    notFull:        LD      HL,(serInPtr)
0087   004C 23                          INC     HL
0088   004D 7D                          LD      A,L             ; Only need to check low byte becasuse buffer<256 bytes
0089   004E FE 3F                       CP      (serBuf+SER_BUFSIZE) & 0FFH
0090   0050 20 03                       JR      NZ, notWrap
0091   0052 21 00 20                    LD      HL,serBuf
0092   0055 22 3F 20    notWrap:        LD      (serInPtr),HL
0093   0058 F1                          POP     AF
0094   0059 77                          LD      (HL),A
0095   005A 3A 43 20                    LD      A,(serBufUsed)
0096   005D 3C                          INC     A
0097   005E 32 43 20                    LD      (serBufUsed),A
0098   0061 FE 30                       CP      SER_FULLSIZE
0099   0063 38 00                       JR      C,rts0
0100   0065 E1          rts0:           POP     HL
0101   0066 F1                          POP     AF
0102   0067 FB                          EI
0103   0068 ED 4D                       RETI
0104   006A             
0105   006A             ;------------------------------------------------------------------------------
0106   006A             RXA:
0107   006A 3A 43 20    waitForChar:    LD      A,(serBufUsed)
0108   006D FE 00                       CP      00H
0109   006F 28 F9                       JR      Z, waitForChar
0110   0071 E5                          PUSH    HL
0111   0072 2A 41 20                    LD      HL,(serRdPtr)
0112   0075 23                          INC     HL
0113   0076 7D                          LD      A,L             ; Only need to check low byte becasuse buffer<256 bytes
0114   0077 FE 3F                       CP      (serBuf+SER_BUFSIZE) & 0FFH
0115   0079 20 03                       JR      NZ, notRdWrap
0116   007B 21 00 20                    LD      HL,serBuf
0117   007E F3          notRdWrap:      DI
0118   007F 22 41 20                    LD      (serRdPtr),HL
0119   0082 3A 43 20                    LD      A,(serBufUsed)
0120   0085 3D                          DEC     A
0121   0086 32 43 20                    LD      (serBufUsed),A
0122   0089 FE 05                       CP      SER_EMPTYSIZE
0123   008B 30 00                       JR      NC,rts1
0124   008D             rts1:
0125   008D 7E                          LD      A,(HL)
0126   008E FB                          EI
0127   008F E1                          POP     HL
0128   0090 C9                          RET                      ; Char ready in A
0129   0091             
0130   0091             ;------------------------------------------------------------------------------
0131   0091 D3 00       TXA:            OUT     (00h),A
0132   0093 C9          		RET
0133   0094             
0134   0094             
0135   0094             ;------------------------------------------------------------------------------
0136   0094 3A 43 20    CKINCHAR        LD      A,(serBufUsed)
0137   0097 FE 00                       CP      0
0138   0099 C9                          RET
0139   009A             
0140   009A 7E          PRINT:          LD      A,(HL)          ; Get character
0141   009B B7                          OR      A               ; Is it $00 ?
0142   009C C8                          RET     Z               ; Then RETurn on terminator
0143   009D CF                          RST     08H             ; Print it
0144   009E 23                          INC     HL              ; Next Character
0145   009F 18 F9                       JR      PRINT           ; Continue until $00
0146   00A1 C9                          RET
0147   00A2             ;------------------------------------------------------------------------------
0148   00A2             INIT:
0149   00A2 21 ED 20                    LD      HL,TEMPSTACK    ; Temp stack
0150   00A5 F9                          LD      SP,HL           ; Set up a temporary stack
0151   00A6 21 00 20                    LD      HL,serBuf
0152   00A9 22 3F 20                    LD      (serInPtr),HL
0153   00AC 22 41 20                    LD      (serRdPtr),HL
0154   00AF AF                          XOR     A               ;0 to accumulator
0155   00B0 32 43 20                    LD      (serBufUsed),A
0156   00B3             
0157   00B3 ED 56                       IM      1               ; Interrupt-mode 1
0158   00B5 FB                          EI                      ; Enable interrupts
0159   00B6 21 EF 00                    LD      HL,SIGNON1      ; Sign-on message
0160   00B9 CD 9A 00                    CALL    PRINT           ; Output string
0161   00BC 3A 44 20                    LD      A,(basicStarted); Check the BASIC STARTED flag
0162   00BF FE 59                       CP      'Y'             ; to see if this is power-up
0163   00C1 20 16                       JR      NZ,COLDSTART    ; If not BASIC started then always do cold start
0164   00C3 21 0A 01                    LD      HL,SIGNON2      ; Cold/warm message
0165   00C6 CD 9A 00                    CALL    PRINT           ; Output string
0166   00C9             CORW:
0167   00C9 CD 6A 00                    CALL    RXA
0168   00CC E6 DF                       AND     11011111B       ; lower to uppercase
0169   00CE FE 43                       CP      'C'
0170   00D0 20 0F                       JR      NZ, CHECKWARM
0171   00D2 CF                          RST     08H
0172   00D3 3E 0D                       LD      A,0DH
0173   00D5 CF                          RST     08H
0174   00D6 3E 0A                       LD      A,0AH
0175   00D8 CF                          RST     08H
0176   00D9 3E 59       COLDSTART:      LD      A,'Y'           ; Set the BASIC STARTED flag
0177   00DB 32 44 20                    LD      (basicStarted),A
0178   00DE C3 50 01                    JP      0150H           ; Start BASIC COLD
0179   00E1             CHECKWARM:
0180   00E1 FE 57                       CP      'W'
0181   00E3 20 E4                       JR      NZ, CORW
0182   00E5 CF                          RST     08H
0183   00E6 3E 0D                       LD      A,0DH
0184   00E8 CF                          RST     08H
0185   00E9 3E 0A                       LD      A,0AH
0186   00EB CF                          RST     08H
0187   00EC C3 53 01                    JP      0153H           ; Start BASIC WARM
0188   00EF             
0189   00EF 0C          SIGNON1:        .DB     CS
0190   00F0 5A 38 30 20                 .DB     "Z80 SBC By Grant Searle",CR,LF,0
0190   00F4 53 42 43 20 
0190   00F8 42 79 20 47 
0190   00FC 72 61 6E 74 
0190   0100 20 53 65 61 
0190   0104 72 6C 65 0D 
0190   0108 0A 00 
0191   010A 0D 0A       SIGNON2:        .DB     CR,LF
0192   010C 28 43 29 6F                 .DB     "(C)old or (W)arm start?",0
0192   0110 6C 64 20 6F 
0192   0114 72 20 28 57 
0192   0118 29 61 72 6D 
0192   011C 20 73 74 61 
0192   0120 72 74 3F 00 
0193   0124             
0194   0124 00 00 00 00                 .FILL   (00150H - $), 0
0194   0128 00 00 00 00 
0194   012C 00 00 00 00 
0194   0130 00 00 00 00 
0194   0134 00 00 00 00 
0194   0138 00 00 00 00 
0194   013C 00 00 00 00 
0194   0140 00 00 00 00 
0194   0144 00 00 00 00 
0194   0148 00 00 00 00 
0194   014C 00 00 00 00 
0195   0150             
0196   0150             .END
